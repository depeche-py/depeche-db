name: "Tests"

on:
  push:

jobs:
  tests-python-versions:
    strategy:
      matrix:
        python: ["3.9", "3.10", "3.11"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run dependencies
        run: |
          docker compose -f docker-compose.yml up -d
      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python }}
      - name: Install
        run: |
          pipx install poetry
          poetry env use ${{ matrix.python }}
          poetry install --with dev
          poetry add psycopg2-binary
          poetry show
      - name: Run tests
        run: poetry run pytest -vv
  tests-psycopg-version:
    strategy:
      matrix:
        psycopg: ["psycopg2-binary", "psycopg2-binary==2.9.3", "psycopg[binary]", "psycopg[binary]==3.1"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run dependencies
        run: |
          docker compose -f docker-compose.yml up -d
      - name: Install
        run: |
          pipx install poetry
          poetry install --with dev
          poetry add '${{ matrix.psycopg }}'
          poetry show
      - name: Run tests
        run: poetry run pytest -vv
  tests-sqlalchemy-versions:
    strategy:
      matrix:
        sqlalchemy: ["^1.4", "^2.0"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run dependencies
        run: |
          docker compose -f docker-compose.yml up -d
      - name: Install
        run: |
          pipx install poetry
          poetry install --with dev
          poetry add psycopg2-binary
          poetry add sqlalchemy${{ matrix.sqlalchemy }}
          poetry show
      - name: Run tests
        run: poetry run pytest -vv
  tests-postgresql-versions:
    strategy:
      matrix:
        postgres: ["12", "13", "14", "15", "16"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run dependencies
        run: |
          POSTGRES_VERSION=${{ matrix.postgres }} docker compose -f docker-compose.yml up -d
      - name: Install
        run: |
          pipx install poetry
          poetry install --with dev
          poetry add psycopg2-binary
          poetry show
      - name: Run tests
        run: poetry run pytest -vv
  tests-pydantic:
    strategy:
      matrix:
        pydantic: ["^1.10", "^2.4"]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Run dependencies
        run: |
          docker compose -f docker-compose.yml up -d
      - name: Install
        run: |
          pipx install poetry
          poetry install --with dev
          poetry add psycopg2-binary
          poetry add --group dev pydantic${{ matrix.pydantic }}
          poetry show
      - name: Run tests
        run: poetry run pytest -vv tests/tools/test_pydantic_serializer.py
